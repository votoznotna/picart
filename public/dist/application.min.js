"use strict";var ApplicationConfiguration=function(){var applicationModuleName="picart",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","grecaptcha"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]).config(["grecaptchaProvider",function(grecaptchaProvider){grecaptchaProvider.setParameters({sitekey:window.recaptchaSiteKey,theme:"light"})}]).run(["mongolab",function(mongolab){mongolab.setApiKey(window.mongolabApiKey)}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("common"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("galleries",["common","imageupload"]),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(){}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("common").directive("fileRequired",function(){return{restrict:"A",require:"ngModel",link:function(scope,el,attrs,ngModel){el.bind("change",function(){scope.$apply(function(){ngModel.$setViewValue(el.val()),ngModel.$render()})})}}}),angular.module("common").directive("onFinishRenderFilters",["$timeout",function($timeout){return{restrict:"A",link:function(scope){scope.$last===!0&&$timeout(function(){scope.$emit("ngRepeatFinished")})}}}]),angular.module("common").directive("showErrors",["$timeout",function($timeout){return{restrict:"A",require:"^form",link:function(scope,el,attrs,formCtrl){var inputEl=el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=inputNgEl.attr("name");inputNgEl.bind("blur",function(){el.toggleClass("has-error",formCtrl[inputName].$invalid)}),scope.$on("show-errors-event",function(){el.toggleClass("has-error",formCtrl[inputName].$invalid)}),scope.$on("hide-errors-event",function(){$timeout(function(){el.removeClass("has-error")},0,!1)})}}}]),angular.module("common").directive("uniqueName",["mongolab",function(mongolab){return{restrict:"A",require:"ngModel",link:function(scope,element,attrs,ctrl){var mongoDbCollection=attrs.mongoCollection,mongoDbName=window.dbName,getByNameSuccessHandler=function(response){response.data&&response.data.length>0?ctrl.$setValidity("uniqueName",!1):ctrl.$setValidity("uniqueName",!0)},getByNameErrorHandler=function(){ctrl.$setValidity("uniqueName",!0)};ctrl.$parsers.unshift(function(viewValue){return null!==viewValue&&void 0!==viewValue&&""!==viewValue&&mongolab.query(mongoDbName,mongoDbCollection,{q:{title_searchable:viewValue.toLowerCase()}}).then(getByNameSuccessHandler,getByNameErrorHandler),viewValue})}}}]),angular.module("common").directive("waitSpinner",["messaging","events",function(messaging,events){return{restrict:"E",replace:!0,templateUrl:"modules/common/directives/waitSpinner.html",link:function(scope,element){element.hide();var startRequestHandler=function(){element.show(),angular.element("#main").css("opacity","0.5")},endRequestHandler=function(){element.hide(),angular.element("#main").css("opacity","1.0")};scope.startHandle=messaging.subscribe(events.message._SERVER_REQUEST_STARTED_,startRequestHandler),scope.endHandle=messaging.subscribe(events.message._SERVER_REQUEST_ENDED_,endRequestHandler),scope.$on("$destroy",function(){messaging.unsubscribe(scope.startHandle),messaging.unsubscribe(scope.endHandle)})}}}]),angular.module("common").constant("events",{message:{_ADD_ERROR_MESSAGE_:"_ADD_ERROR_MESSAGE_",_CLEAR_ERROR_MESSAGES_:"_CLEAR_ERROR_MESSAGES_",_ERROR_MESSAGES_UPDATED_:"_ERROR_MESSAGES_UPDATED_",_ADD_USER_MESSAGE_:"_ADD_USER_MESSAGE_",_CLEAR_USER_MESSAGES_:"_CLEAR_USER_MESSAGES_",_USER_MESSAGES_UPDATED_:"_USER_MESSAGES_UPDATED_",_SERVER_REQUEST_STARTED_:"_SERVER_REQUEST_STARTED_",_SERVER_REQUEST_ENDED_:"_SERVER_REQUEST_ENDED_",_LOG_TRACE_:"_LOG_TRACE_",_LOG_DEBUG_:"_LOG_DEBUG_",_LOG_INFO_:"_LOG_INFO_",_LOG_WARNING_:"_LOG_WARNING_",_LOG_ERROR_:"_LOG_ERROR_",_LOG_FATAL_:"_LOG_FATAL_"}}),angular.module("common").factory("messaging",function(){var cache={},subscribe=function(topic,callback){return cache[topic]||(cache[topic]=[]),cache[topic].push(callback),[topic,callback]},publish=function(topic,args){cache[topic]&&angular.forEach(cache[topic],function(callback){callback.apply(null,args||[])})},unsubscribe=function(handle){var t=handle[0];if(cache[t])for(var x=0;x<cache[t].length;x++)cache[t][x]===handle[1]&&cache[t].splice(x,1)},service={publish:publish,subscribe:subscribe,unsubscribe:unsubscribe};return service}),angular.module("common").factory("mongolab",["$http",function($http){var apiKey="",baseUrl="https://api.mongolab.com/api/1/databases",setApiKey=function(apikey){apiKey=apikey},getApiKey=function(){return apiKey},setBaseUrl=function(uri){baseUrl=uri},getBaseUrl=function(){return baseUrl},query=function(database,collection,parameters){parameters=parameters||{},parameters.apiKey=apiKey;var uri=baseUrl+"/"+database+"/collections/"+collection;return $http({method:"GET",url:uri,params:parameters,cache:!1})},queryById=function(database,collection,id,parameters){parameters=parameters||{},parameters.apiKey=apiKey;var uri=baseUrl+"/"+database+"/collections/"+collection+"/"+id;return $http({method:"GET",url:uri,params:parameters,cache:!1})},createObject=function(database,collection,object){var uri=baseUrl+"/"+database+"/collections/"+collection+"?apiKey="+apiKey;return $http({method:"POST",url:uri,data:angular.toJson(object),cache:!1})},updateObject=function(database,collection,object){var uri=baseUrl+"/"+database+"/collections/"+collection+"/"+object._id.$oid+"?apiKey="+apiKey;return delete object._id,$http({method:"PUT",url:uri,data:angular.toJson(object),cache:!1})},deleteObject=function(database,collection,object){var uri=baseUrl+"/"+database+"/collections/"+collection+"/"+object._id.$oid+"?apiKey="+apiKey;return $http({method:"DELETE",url:uri,cache:!1})},mongolab={setApiKey:setApiKey,getApiKey:getApiKey,setBaseUrl:setBaseUrl,getBaseUrl:getBaseUrl,query:query,queryById:queryById,create:createObject,update:updateObject,"delete":deleteObject};return mongolab}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",!0)}]),angular.module("galleries").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Exhibition","exhibition",null,null,!0),Menus.addMenuItem("topbar","New Exhibit","exhibition/create",null,null,!1)}]),angular.module("galleries").config(["$stateProvider",function($stateProvider){$stateProvider.state("exhibition",{url:"/exhibition",templateUrl:"modules/galleries/views/list-galleries.client.view.html"}).state("createExhibit",{url:"/exhibition/create",templateUrl:"modules/galleries/views/create-gallery.client.view.html"}).state("viewExhibit",{url:"/exhibition/:exhibitId",templateUrl:"modules/galleries/views/view-gallery.client.view.html"}).state("editExhibit",{url:"/exhibition/:exhibitId/edit",templateUrl:"modules/galleries/views/edit-gallery.client.view.html"})}]),angular.module("galleries").controller("GalleriesController",["$scope","$stateParams","$state","$http","$window","Authentication","Galleries","messaging","events",function($scope,$stateParams,$state,$http,$window,Authentication,Galleries,messaging,events){$scope.master={},$scope.recaptcha=null,$scope.gallery=angular.copy($scope.master),$scope.authentication=Authentication,$scope.create=function(){if($scope.$broadcast("show-errors-event"),!$scope.galleryForm.$invalid){var formData=new FormData;formData.append("image",$scope.gallery.picture.file),formData.append("title",$scope.gallery.title),formData.append("content",$scope.gallery.content),formData.append("recaptcha",$scope.recaptcha),messaging.publish(events.message._SERVER_REQUEST_STARTED_),$http.post("upload",formData,{headers:{"Content-Type":void 0},transformRequest:angular.identity}).then(function(){$state.go("exhibition")},function(result){$scope.hasFormError=!0,$scope.formErrors=result?result.data.message:"Unknown error"})["finally"](function(){messaging.publish(events.message._SERVER_REQUEST_ENDED_)})}},$scope.remove=function(gallery){if(gallery){gallery.$remove();for(var i in $scope.galleries)$scope.galleries[i]===gallery&&$scope.galleries.splice(i,1)}else $scope.gallery.$remove(function(){$state.go("exhibition")})},$scope.update=function(){if($scope.$broadcast("show-errors-event"),!$scope.galleryForm.$invalid){var gallery=$scope.gallery;gallery.$update(function(){$state.go("exhibition")},function(errorResponse){$scope.hasFormError=!0,$scope.formErrors=errorResponse.statusText})}},$scope.find=function(){$scope.galleries=Galleries.query()},$scope.findOne=function(){$scope.gallery=Galleries.get({galleryId:$stateParams.galleryId})},$scope.cancelForm=function(){$state.go("exhibition")},$scope.resetForm=function(){$scope.$broadcast("hide-errors-event"),$scope.clearPicture(),$scope.gallery=angular.copy($scope.master),$scope.hasFormError=!1,$scope.formErrors=null,$scope.galleryForm.$setPristine(),$scope.galleryForm.$setUntouched()},$scope.clearPicture=function(){$scope.gallery.picture=null,angular.element(document.querySelector("#picture")).val("")},$scope.$on("ngRepeatFinished",function(){jQuery(".magnify").imageMagnify({magnifyby:3.5,thumbdimensions:[300,200]})})}]),angular.module("galleries").factory("Galleries",["$resource",function($resource){return $resource("galleries/:galleryId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("galleries").factory("GalleryService",["$http","$q"],function($http,$q){function getAlbums(){var def=$q.defer();return $http.get("./albums.ms").success(function(data){service.albums=data,def.resolve(data)}).error(function(){def.reject("Failed to get albums")}),def.promise}var service={albums:[],getAlbums:getAlbums};return service}),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.href=function(href){$location.path(href)},$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]),jQuery.noConflict(),jQuery.imageMagnify={dsettings:{magnifyby:3,duration:500,imgopacity:.2},cursorcss:"url(/modules/common/js/magnify/magnify.cur), -moz-zoom-in",zIndexcounter:100,refreshoffsets:function($window,$target,warpshell){var $offsets=$target.offset(),winattrs={x:$window.scrollLeft(),y:$window.scrollTop(),w:$window.width(),h:$window.height()};warpshell.attrs.x=$offsets.left,warpshell.attrs.y=$offsets.top,warpshell.newattrs.x=winattrs.x+winattrs.w/2-warpshell.newattrs.w/2,warpshell.newattrs.y=winattrs.y+winattrs.h/2-warpshell.newattrs.h/2,warpshell.newattrs.x<winattrs.x+5?warpshell.newattrs.x=winattrs.x+5:warpshell.newattrs.x+warpshell.newattrs.w>winattrs.x+winattrs.w&&(warpshell.newattrs.x=winattrs.x+5),warpshell.newattrs.y<winattrs.y+5&&(warpshell.newattrs.y=winattrs.y+5)},magnify:function($,$target,options){var setting={},setting=jQuery.extend(setting,this.dsettings,options),attrs=options.thumbdimensions?{w:options.thumbdimensions[0],h:options.thumbdimensions[1]}:{w:$target.outerWidth(),h:$target.outerHeight()},newattrs={};newattrs.w=setting.magnifyto?setting.magnifyto:Math.round(attrs.w*setting.magnifyby),newattrs.h=Math.round(setting.magnifyto?attrs.h*newattrs.w/attrs.w:attrs.h*setting.magnifyby),$target.css("cursor",jQuery.imageMagnify.cursorcss),$target.data("imgshell")&&($target.data("imgshell").$clone.remove(),$target.css({opacity:1}).unbind("click.magnify"));var $clone=$target.clone().css({position:"absolute",left:0,top:0,visibility:"hidden",border:"1px solid gray",cursor:"pointer"}).appendTo(document.body);$clone.data("$relatedtarget",$target),$target.data("imgshell",{$clone:$clone,attrs:attrs,newattrs:newattrs}),$target.bind("click.magnify",function(){var $this=$(this).css({opacity:setting.imgopacity}),imageinfo=$this.data("imgshell");jQuery.imageMagnify.refreshoffsets($(window),$this,imageinfo);var $clone=imageinfo.$clone;$clone.stop().css({zIndex:++jQuery.imageMagnify.zIndexcounter,left:imageinfo.attrs.x,top:imageinfo.attrs.y,width:imageinfo.attrs.w,height:imageinfo.attrs.h,opacity:0,visibility:"visible",display:"block"}).animate({opacity:1,left:imageinfo.newattrs.x,top:imageinfo.newattrs.y,width:imageinfo.newattrs.w,height:imageinfo.newattrs.h},setting.duration,function(){})}),$clone.click(function(){var $this=$(this),imageinfo=$this.data("$relatedtarget").data("imgshell");jQuery.imageMagnify.refreshoffsets($(window),$this.data("$relatedtarget"),imageinfo),$this.stop().animate({opacity:0,left:imageinfo.attrs.x,top:imageinfo.attrs.y,width:imageinfo.attrs.w,height:imageinfo.attrs.h},setting.duration,function(){$this.hide(),$this.data("$relatedtarget").css({opacity:1})})})}},jQuery.fn.imageMagnify=function(options){var $=jQuery;return this.each(function(){var $imgref=$(this);return"IMG"!=this.tagName?!0:void(parseInt($imgref.css("width"))>0&&parseInt($imgref.css("height"))>0||options.thumbdimensions?jQuery.imageMagnify.magnify($,$imgref,options):this.complete?jQuery.imageMagnify.magnify($,$imgref,options):$(this).bind("load",function(){jQuery.imageMagnify.magnify($,$imgref,options)}))})},jQuery.fn.applyMagnifier=function(){var $=jQuery;return this.each(function(){$(this);return"IMG"!=this.tagName?!0:void 0})},jQuery(document).ready(function($){var $targets=$(".magnify");$targets.each(function(){var $target=$(this),options={};$target.attr("data-magnifyto")&&(options.magnifyto=parseFloat($target.attr("data-magnifyto"))),$target.attr("data-magnifyby")&&(options.magnifyby=parseFloat($target.attr("data-magnifyby"))),$target.attr("data-magnifyduration")&&(options.duration=parseInt($target.attr("data-magnifyduration"))),$target.imageMagnify(options)});var $triggers=$('a[rel^="magnify["]');$triggers.each(function(){var $trigger=$(this),targetid=$trigger.attr("rel").match(/\[.+\]/)[0].replace(/[\[\]']/g,"");$trigger.data("magnifyimageid",targetid),$trigger.click(function(e){$("#"+$(this).data("magnifyimageid")).trigger("click.magnify"),e.preventDefault()})})});